import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;


public class NewJFrame extends javax.swing.JFrame {

    public NewJFrame() {
        initComponents();
        balanceText1.setText(String.valueOf(playerBalance));
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jPanel5 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel6 = new javax.swing.JPanel();
        Card1 = new javax.swing.JLabel();
        Card2 = new javax.swing.JLabel();
        Card3 = new javax.swing.JLabel();
        Card4 = new javax.swing.JLabel();
        Card5 = new javax.swing.JLabel();
        btnHold = new javax.swing.JButton();
        btnHold1 = new javax.swing.JButton();
        btnHold2 = new javax.swing.JButton();
        btnHold3 = new javax.swing.JButton();
        btnHold4 = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        balanceText = new javax.swing.JLabel();
        btnBet = new javax.swing.JButton();
        btnNewGame = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        btnDraw = new javax.swing.JButton();
        txtBalance1 = new javax.swing.JTextField();
        balanceText1 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();

        jButton1.setText("jButton1");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 0, 255));
        setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        setResizable(false);

        jPanel3.setBackground(new java.awt.Color(24, 24, 24));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, new java.awt.Color(255, 255, 51), null));
        jPanel3.setForeground(new java.awt.Color(255, 255, 153));

        jPanel2.setBackground(new java.awt.Color(0, 0, 204));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 51), 5));
        jPanel2.setForeground(new java.awt.Color(0, 0, 204));
        jPanel2.setToolTipText("");

        jPanel4.setBackground(new java.awt.Color(48, 48, 48));
        jPanel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel2.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("WINNING HANDS");

        jLabel5.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 51));
        jLabel5.setText("ROYAL FLUSH..............................................................................................");

        jLabel6.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 51));
        jLabel6.setText("STRAIGHT FLUSH........................................................................................");

        jLabel7.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 51));
        jLabel7.setText("FOUR OF A KIND..........................................................................................");

        jLabel8.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 51));
        jLabel8.setText("FULL HOUSE................................................................................................");

        jLabel9.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 51));
        jLabel9.setText("FLUSH...........................................................................................................");

        jLabel10.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 51));
        jLabel10.setText("STRAIGHT....................................................................................................");

        jLabel11.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 51));
        jLabel11.setText("THREE OF A KIND.......................................................................................");

        jLabel12.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 51));
        jLabel12.setText("TWO PAIRS..................................................................................................");

        jLabel13.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 51));
        jLabel13.setText("JACKS OR BETTER....................................................................................");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jSeparator2))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel13)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBackground(new java.awt.Color(153, 0, 0));
        jPanel5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel4.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("MULTIPLIER");

        jLabel14.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 51));
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel14.setText("250");
        jLabel14.setAlignmentX(0.5F);

        jLabel15.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 51));
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel15.setText("50");

        jLabel16.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 51));
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel16.setText("25");

        jLabel17.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 51));
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel17.setText("9");

        jLabel18.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 51));
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel18.setText("6");

        jLabel19.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 51));
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel19.setText("5");

        jLabel20.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 51));
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel20.setText("3");

        jLabel21.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 255, 51));
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel21.setText("2");

        jLabel22.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 255, 51));
        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel22.setText("1");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGap(0, 80, Short.MAX_VALUE)
                        .addComponent(jLabel4))
                    .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jPanel6.setBackground(new java.awt.Color(0, 0, 204));
        jPanel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 51), 5));

        Card1.setBackground(new java.awt.Color(255, 255, 255));
        Card1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/red_joker.png"))); // NOI18N
        Card1.setAlignmentX(0.5F);
        Card1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 51), 3));
        Card1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Card1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Card1.setMaximumSize(new java.awt.Dimension(500, 726));
        Card1.setMinimumSize(new java.awt.Dimension(250, 450));
        Card1.setName(""); // NOI18N
        Card1.setPreferredSize(new java.awt.Dimension(150, 250));
        Card1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                Card1MousePressed(evt);
            }
        });

        Card2.setBackground(new java.awt.Color(0, 0, 255));
        Card2.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        Card2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/black_joker.png"))); // NOI18N
        Card2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 51), 3));
        Card2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Card2.setPreferredSize(new java.awt.Dimension(72, 96));
        Card2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                Card2MousePressed(evt);
            }
        });

        Card3.setBackground(new java.awt.Color(0, 0, 255));
        Card3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/red_joker.png"))); // NOI18N
        Card3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 51), 3));
        Card3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Card3.setPreferredSize(new java.awt.Dimension(72, 96));
        Card3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                Card3MousePressed(evt);
            }
        });

        Card4.setBackground(new java.awt.Color(0, 0, 255));
        Card4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/black_joker.png"))); // NOI18N
        Card4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 51), 3));
        Card4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Card4.setPreferredSize(new java.awt.Dimension(72, 96));
        Card4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                Card4MousePressed(evt);
            }
        });

        Card5.setBackground(new java.awt.Color(0, 0, 255));
        Card5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/red_joker.png"))); // NOI18N
        Card5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 51), 3));
        Card5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Card5.setPreferredSize(new java.awt.Dimension(72, 96));
        Card5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                Card5MousePressed(evt);
            }
        });

        btnHold.setBackground(new java.awt.Color(204, 204, 255));
        btnHold.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        btnHold.setText("HOLD");
        btnHold.setToolTipText("Hold This Card When Dealing New Cards");
        btnHold.setOpaque(false);

        btnHold1.setBackground(new java.awt.Color(204, 204, 255));
        btnHold1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        btnHold1.setText("HOLD");
        btnHold1.setToolTipText("Hold This Card When Dealing New Cards");

        btnHold2.setBackground(new java.awt.Color(204, 204, 255));
        btnHold2.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        btnHold2.setText("HOLD");
        btnHold2.setToolTipText("Hold This Card When Dealing New Cards");

        btnHold3.setBackground(new java.awt.Color(204, 204, 255));
        btnHold3.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        btnHold3.setText("HOLD");
        btnHold3.setToolTipText("Hold This Card When Dealing New Cards");

        btnHold4.setBackground(new java.awt.Color(204, 204, 255));
        btnHold4.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        btnHold4.setText("HOLD");
        btnHold4.setToolTipText("Hold This Card When Dealing New Cards");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addComponent(btnHold)
                .addGap(115, 115, 115)
                .addComponent(btnHold1)
                .addGap(125, 125, 125)
                .addComponent(btnHold2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnHold3)
                .addGap(118, 118, 118)
                .addComponent(btnHold4)
                .addGap(72, 72, 72))
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Card1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Card2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Card3, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Card4, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Card5, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(25, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnHold)
                    .addComponent(btnHold1)
                    .addComponent(btnHold2)
                    .addComponent(btnHold3)
                    .addComponent(btnHold4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Card3, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Card4, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Card5, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Card2, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Card1, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        Card2.getAccessibleContext().setAccessibleName("card");

        jPanel7.setBackground(new java.awt.Color(0, 0, 204));
        jPanel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 51), 5));

        balanceText.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        balanceText.setForeground(new java.awt.Color(255, 255, 51));
        balanceText.setText("BALANCE:");

        btnBet.setBackground(new java.awt.Color(255, 255, 51));
        btnBet.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        btnBet.setForeground(new java.awt.Color(48, 48, 48));
        btnBet.setText("BET");
        btnBet.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(255, 255, 153), new java.awt.Color(51, 51, 51), null));
        btnBet.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBet.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnBet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBetActionPerformed(evt);
            }
        });

        btnNewGame.setBackground(new java.awt.Color(255, 255, 51));
        btnNewGame.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnNewGame.setText("NEW GAME");
        btnNewGame.setAutoscrolls(true);
        btnNewGame.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(255, 255, 153), new java.awt.Color(51, 51, 51), null));
        btnNewGame.setBorderPainted(false);
        btnNewGame.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnNewGame.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnNewGame.setMargin(new java.awt.Insets(15, 15, 15, 15));
        btnNewGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewGameActionPerformed(evt);
            }
        });

        btnReset.setBackground(new java.awt.Color(255, 255, 51));
        btnReset.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnReset.setText("RESET BALANCE");
        btnReset.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(255, 255, 153), new java.awt.Color(51, 51, 51), null));
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        btnDraw.setBackground(new java.awt.Color(255, 255, 51));
        btnDraw.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        btnDraw.setText("DRAW");
        btnDraw.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(255, 255, 153), new java.awt.Color(51, 51, 51), null));
        btnDraw.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnDraw.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDrawActionPerformed(evt);
            }
        });

        txtBalance1.setBackground(new java.awt.Color(0, 0, 204));
        txtBalance1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        txtBalance1.setForeground(new java.awt.Color(255, 255, 255));
        txtBalance1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtBalance1.setText("ENTER YOUR BET");
        txtBalance1.setToolTipText("");
        txtBalance1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 51), 3));
        txtBalance1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtBalance1FocusGained(evt);
            }
        });
        txtBalance1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBalance1ActionPerformed(evt);
            }
        });

        balanceText1.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        balanceText1.setForeground(new java.awt.Color(255, 255, 51));
        balanceText1.setText("$");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(balanceText)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(balanceText1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(txtBalance1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnBet, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnDraw, javax.swing.GroupLayout.DEFAULT_SIZE, 389, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnNewGame, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnReset, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(14, 14, 14))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnBet, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                        .addComponent(balanceText)
                        .addComponent(balanceText1))
                    .addComponent(btnNewGame, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnReset, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnDraw, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                    .addComponent(txtBalance1))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jLabel23.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 32)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(255, 255, 51));
        jLabel23.setText("VIDEO POKER");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel23)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel23)
                .addGap(15, 15, 15)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
         playerBalance = startingBalance;
         balanceText1.setText(String.valueOf(playerBalance));
         Card1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/red_joker.PNG")));
         Card2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/black_joker.PNG")));
         Card3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/red_joker.PNG")));
         Card4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/black_joker.PNG")));
         Card5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/red_joker.PNG")));
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnDrawActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDrawActionPerformed
       if(betOrDealToggle==false){
        cardsToKeep();
        setImages();
        checkHands();
        betOrDealToggle = true;
       }
    }//GEN-LAST:event_btnDrawActionPerformed

    private void btnBetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBetActionPerformed
        for(int i=0; i<hold.length;i++){
           hold[i]= false;
       }
        
        if(betOrDealToggle==true){
        getBet();
            if(validBet==true){
                betOrDealToggle = false;
                play();
            }
        }
    }//GEN-LAST:event_btnBetActionPerformed

    private void btnNewGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewGameActionPerformed
           Card1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/red_joker.PNG")));
           Card2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/black_joker.PNG")));
           Card3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/red_joker.PNG")));
           Card4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/black_joker.PNG")));
           Card5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/red_joker.PNG")));
           for(int i=0; i<hold.length;i++){
           hold[i]= false;
           }
           newGame();
    }//GEN-LAST:event_btnNewGameActionPerformed
    
    private void txtBalance1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBalance1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBalance1ActionPerformed

    private void Card1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Card1MousePressed
        hold[0] = !hold[0];
        
    }//GEN-LAST:event_Card1MousePressed

    private void Card2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Card2MousePressed
        hold[1] = !hold[1];
    }//GEN-LAST:event_Card2MousePressed

    private void Card3MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Card3MousePressed
        hold[2] = !hold[2];
    }//GEN-LAST:event_Card3MousePressed

    private void Card4MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Card4MousePressed
        hold[3] = !hold[3];
    }//GEN-LAST:event_Card4MousePressed

    private void Card5MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Card5MousePressed
        hold[4] = !hold[4];
       
    }//GEN-LAST:event_Card5MousePressed

    private void txtBalance1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtBalance1FocusGained
        txtBalance1.setText("");
        
       
    }//GEN-LAST:event_txtBalance1FocusGained

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus2 look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }
    
        
    private static final int numberOfCards=5;
    private static final int startingBalance=10000;
    // default constant payout value and playerHand types
    private static final int[] multipliers={1,2,3,5,6,9,25,50,250};
    private static final String[] goodHandTypes={ 
      "Royal Pair" , "Two Pairs" , "Three of a Kind", "Straight", "Flush", 
      "Full House", "Four of a Kind", "Straight Flush", "Royal Flush" };
 
    // must use only one deck
   
    private static final Decks oneDeck = new Decks(1);
 
     
     
 
      
    private List<Card> playerHand;
    private int playerBalance = startingBalance;
    private int playerBet;
    private boolean[] hold = new boolean[5];
    private boolean betOrDealToggle = true;
    private boolean validBet = true;
   
     
    
    private void getBet(){
     String betString = txtBalance1.getText();
     
     playerBet = Integer.parseInt(betString);
            if(playerBet > playerBalance){
                JOptionPane.showMessageDialog(null,"Insufficeitn Funds");
                playerBet = 0;
                validBet=false;
            } else {
                validBet = true;
            }
           
        playerBalance -= playerBet;
        balanceText1.setText(String.valueOf(playerBalance));
    }
     
  
    private void cardsToKeep(){
        List<Card> newHand = new ArrayList<>();
            for(int i=0; i<numberOfCards; i++){
                if(hold[i]==true){
                    newHand.add(playerHand.get(i));
                }
            }
        
        playerHand = newHand;
        List<Card> deal = new ArrayList<>();
        try {
            deal = oneDeck.deal(numberOfCards-playerHand.size());
        }catch(PlayingCardException e){
            System.out.println(e.getMessage());
        }
        for (int i=0; i<deal.size();i++){
            playerHand.add(deal.get(i));
        }
        
        
        
    }
 
    private void payout(int value){
        if(value < 9){
            playerBalance += (playerBet*multipliers[value]);
        }
    }
  
   

    
    private void checkHands()
    {
      
         
        Collections.sort(playerHand,new CompareCard());
        
        int value=-1;
 
     
       //Special Straight Case
      
         
        if(hasJacksOrBetter(playerHand)){
            value = 0;
        }
         
       if(hasTwoPair(playerHand)){
           value = 1;
       }
         
       if(hasThreeOfAKind(playerHand)){
           value =2;
       }
        
       if(hasStraight(playerHand) || hasRoyalStraight(playerHand)){
           value = 3;
            
       }
       if(hasFlush(playerHand)){
           value = 4;
       }
       if (hasFullHouse(playerHand)){
           value = 5;
       }
       if(hasFourOfAKind(playerHand)){
           value = 6;
       }
        
       if(hasStraight(playerHand)&& hasFlush(playerHand)){
         
           value = 7;
       }
       if(hasRoyalStraight(playerHand) && hasFlush(playerHand)){
           value=8;
       }
      
       
       switch(value){
           case 8:
              JOptionPane.showMessageDialog(null, goodHandTypes[8]);
               payout(8);
               break;
           case 7:
               JOptionPane.showMessageDialog(null, goodHandTypes[7]);
               payout(7);
               break;
           case 6:
              JOptionPane.showMessageDialog(null, goodHandTypes[6]);
               payout(6);
               break;
           case 5:
               JOptionPane.showMessageDialog(null, goodHandTypes[5]);
               payout(5);
               break;
           case 4:JOptionPane.showMessageDialog(null, goodHandTypes[4]);
               payout(4);
               break;
                
           case 3:
              JOptionPane.showMessageDialog(null, goodHandTypes[3]);
               payout(3);
               break;
          case 2:
             JOptionPane.showMessageDialog(null, goodHandTypes[2]);
               payout(2);
               break;
           case 1:
             JOptionPane.showMessageDialog(null, goodHandTypes[1]);
               payout(1);
               break;
           case 0:
              JOptionPane.showMessageDialog(null, goodHandTypes[0]);
               payout(0);
               break;
           default:
               JOptionPane.showMessageDialog(null, "Sometimes, it's just not in the cards. Ya lost. Sorry bro");
               break;
                
       }
         
 
        
           
         
 
     
    }
     
private boolean hasFourOfAKind(List<Card> handPar){
    boolean fourOfAKind = false;

    if((handPar.get(0).getRank()==handPar.get(1).getRank() &&handPar.get(1).getRank()==handPar.get(2).getRank() && handPar.get(3).getRank()==handPar.get(2).getRank())||
            (handPar.get(1).getRank()==handPar.get(2).getRank() &&handPar.get(2).getRank()==handPar.get(3).getRank() && handPar.get(3).getRank()==handPar.get(4).getRank())){
        fourOfAKind=true;
         
    }
     
     
    return fourOfAKind;
     
     
     
}
 
private boolean hasFlush(List<Card> handPar){
   boolean flush = true;
    for(int i=1;i<handPar.size();i++){
            if(handPar.get(0).getSuit()!=handPar.get(i).getSuit()){
                flush = false;
            } 
       }
    return flush;
     
     
    }
 
private boolean hasStraight(List<Card> handPar){
    boolean straight = true;
     for (int i=1;i<handPar.size();i++){
           if(handPar.get(i-1).getRank()-1!=handPar.get(i).getRank()){
               straight = false;
           }
       }
     return straight;
}
  
private boolean hasRoyalStraight(List<Card> handPar){
    boolean royalStraight = false;
    if(handPar.get(0).getRank()==13 && handPar.get(1).getRank()==12 && handPar.get(2).getRank()==11&& handPar.get(3).getRank()==10&&handPar.get(4).getRank()==1){
           royalStraight = true;
       }
    return royalStraight;
}
 
private boolean hasJacksOrBetter(List<Card> handPar){
    boolean jacksOrBetter = false;
    for (int i =0; i<handPar.size()-1;i++){
        if(handPar.get(i).getRank()>=11 && (handPar.get(i+1).getRank()==handPar.get(i).getRank())){
            jacksOrBetter = true;
            break;
        }
    }
    return jacksOrBetter;
}
 
private boolean hasTwoPair(List<Card> handPar){
    boolean twoOfAKind= false;
    if(handPar.get(0).getRank()==handPar.get(1).getRank() && handPar.get(2).getRank()==handPar.get(3).getRank()){
        twoOfAKind=true;
    } else if(handPar.get(1).getRank()==handPar.get(2).getRank() && handPar.get(3).getRank()==handPar.get(4).getRank()){
        twoOfAKind=true;
    } else if(handPar.get(0).getRank()==handPar.get(1).getRank() && handPar.get(3).getRank()==handPar.get(4).getRank()){
        twoOfAKind=true;
    }
     
    return twoOfAKind;
}
 
private boolean hasThreeOfAKind(List<Card> handPar){
    boolean threeOfAKind = false;
    // the hand is previously ordered
     if(handPar.get(0).getRank()==handPar.get(1).getRank() && handPar.get(1).getRank()==handPar.get(2).getRank()){ // front of Hand
        threeOfAKind=true;
    } else if(handPar.get(1).getRank()==handPar.get(2).getRank() && handPar.get(2).getRank()==handPar.get(3).getRank()){ //Middle of Hand
        threeOfAKind=true;
    } else if(handPar.get(2).getRank()==handPar.get(3).getRank() && handPar.get(3).getRank()==handPar.get(4).getRank()){ //End of Hand
        threeOfAKind=true;
    }
    return threeOfAKind;
     
     
}
 
 
private boolean hasFullHouse(List<Card> handPar){
    boolean fullHouse = true;
    if(hasThreeOfAKind(handPar) != true || handPar.get(0).getRank()!=handPar.get(1).getRank() || handPar.get(3).getRank()!=handPar.get(4).getRank()){
        fullHouse= false;
  }
    return false;
}
 
public void setImages(){
    
    Card1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/"+playerHand.get(0).toFileName())));
    
    Card2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/"+playerHand.get(1).toFileName())));
    
    Card3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/"+playerHand.get(2).toFileName())));
    
    Card4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/"+playerHand.get(3).toFileName())));
    
    Card5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pics/"+playerHand.get(4).toFileName())));
}

 
    public void play() 
    {

oneDeck.reset();
oneDeck.shuffle();
try{
    playerHand = new ArrayList<>(oneDeck.deal(numberOfCards));
     
} catch(PlayingCardException e){
    JOptionPane.showMessageDialog(null,"Error");
    
}
setImages();
betOrDealToggle = false;
    }
    public void newGame(){
        playerBalance = startingBalance;
        oneDeck.reset();
        oneDeck.shuffle();
        
        
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JLabel Card1;
    public javax.swing.JLabel Card2;
    public javax.swing.JLabel Card3;
    public javax.swing.JLabel Card4;
    public javax.swing.JLabel Card5;
    private javax.swing.JLabel balanceText;
    private javax.swing.JLabel balanceText1;
    private javax.swing.JButton btnBet;
    private javax.swing.JButton btnDraw;
    private javax.swing.JButton btnHold;
    private javax.swing.JButton btnHold1;
    private javax.swing.JButton btnHold2;
    private javax.swing.JButton btnHold3;
    private javax.swing.JButton btnHold4;
    private javax.swing.JButton btnNewGame;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtBalance1;
    // End of variables declaration//GEN-END:variables
}